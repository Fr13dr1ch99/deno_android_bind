name: build deno 1.36

on:
  push:
    branches: [ "deno-1.36" ]

jobs:
  # build deno 1.36 for `aarch64-linux-android`
  build_android:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x

    - run: cargo fetch
    # symlink `cargo_src` -> ~/.cargo/registry/src/XXX/
    - run: cargo metadata | deno run -A get_cargo_src.js
    # copy source code
    - run: make fetch_code
    # apply patch
    - run: cd workdir && patch -p1 < ../patch_set/p2.patch
    - run: rm workdir/v8-0.75.0/rust-toolchain.toml

    - uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64
    # setup QEMU aarch64 for termux-docker
    - run: docker run --rm --privileged aptman/qus -s -- -p aarch64 arm

    # download `librusty_v8.a` for `lib_v8`
    - uses: robinraju/release-downloader@v1
      with:
        repository: "fm-elpac/v8-src"
        tag: "rusty_v8-0.75.0"
        fileName: "v0.75.0-librusty_v8_release_aarch64-linux-android.a.zst"
    - run: mkdir -p lib_v8/v0.75.0 && cp v0.75.0-librusty_v8_release_aarch64-linux-android.a.zst lib_v8/v0.75.0/librusty_v8_release_aarch64-linux-android.a.zst
    - run: cd lib_v8/v0.75.0 && zstd -d librusty_v8_release_aarch64-linux-android.a.zst

    - uses: robinraju/release-downloader@v1
      with:
        repository: "denoland/rusty_v8"
        tag: "v0.75.0"
        fileName: "librusty_v8_release_x86_64-unknown-linux-gnu.a"
    - run: cp librusty_v8_release_x86_64-unknown-linux-gnu.a lib_v8/v0.75.0

    # setup custom rust toolchain for cargo-cross-build
    - uses: robinraju/release-downloader@v1
      with:
        repository: "fm-elpac/cargo-cross-build"
        tag: "cargo-1.73.0"
        fileName: "cargo-cross-build.tar.zst"
    - run: tar -xvf cargo-cross-build.tar.zst

    - run: rustup target add aarch64-linux-android
    - run: cp -r ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu ~/.rustup/toolchains/cross-build
    - run: cp cargo ~/.rustup/toolchains/cross-build/bin

    # show build env
    - run: env
    # build `deno`
    - run: WORKDIR=$(pwd)/workdir CARGO_DIR=~/.cargo make deno

    # upload deno
    - run: cd workdir/deno-1.36.2/target/aarch64-linux-android/release && zstd -19 deno

    - uses: actions/upload-artifact@v3
      with:
        name: deno-1.36.2_aarch64-linux-android
        path: workdir/deno-1.36.2/target/aarch64-linux-android/release/deno.zst

  # build deno 1.36 for `x86_64-linux-android`
  build_x86_64:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x

    - run: cargo fetch
    # symlink `cargo_src` -> ~/.cargo/registry/src/XXX/
    - run: cargo metadata | deno run -A get_cargo_src.js
    # copy source code
    - run: make fetch_code
    # apply patch
    - run: cd workdir && patch -p1 < ../patch_set/p2.patch
    - run: rm workdir/v8-0.75.0/rust-toolchain.toml

    # download `librusty_v8.a` for `lib_v8`
    - uses: robinraju/release-downloader@v1
      with:
        repository: "fm-elpac/v8-src"
        tag: "rusty_v8-0.75.0-x64"
        fileName: "v0.75.0-librusty_v8_release_x86_64-linux-android.a.zst"
    - run: mkdir -p lib_v8/v0.75.0 && cp v0.75.0-librusty_v8_release_x86_64-linux-android.a.zst lib_v8/v0.75.0/librusty_v8_release_x86_64-linux-android.a.zst
    - run: cd lib_v8/v0.75.0 && zstd -d librusty_v8_release_x86_64-linux-android.a.zst

    - uses: robinraju/release-downloader@v1
      with:
        repository: "denoland/rusty_v8"
        tag: "v0.75.0"
        fileName: "librusty_v8_release_x86_64-unknown-linux-gnu.a"
    - run: cp librusty_v8_release_x86_64-unknown-linux-gnu.a lib_v8/v0.75.0

    # setup custom rust toolchain for cargo-cross-build
    - uses: robinraju/release-downloader@v1
      with:
        repository: "fm-elpac/cargo-cross-build"
        tag: "cargo-1.73.0"
        fileName: "cargo-cross-build.tar.zst"
    - run: tar -xvf cargo-cross-build.tar.zst

    - run: rustup target add x86_64-linux-android
    - run: cp -r ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu ~/.rustup/toolchains/cross-build
    - run: cp cargo ~/.rustup/toolchains/cross-build/bin

    # build `deno`
    - run: WORKDIR=$(pwd)/workdir CARGO_DIR=~/.cargo make deno_x86_64

    # upload deno
    - run: cd workdir/deno-1.36.2/target/x86_64-linux-android/release && zstd -19 deno

    - uses: actions/upload-artifact@v3
      with:
        name: deno-1.36.2_x86_64-linux-android
        path: workdir/deno-1.36.2/target/x86_64-linux-android/release/deno.zst

  # build deno 1.36 for `aarch64-unknown-linux-gnu`
  build_gnu_aarch64:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - run: |
        sudo apt-get update && \
        sudo apt-get -y install \
        binutils-aarch64-linux-gnu \
        gcc-aarch64-linux-gnu \
        g++-aarch64-linux-gnu

    - run: cargo fetch
    # symlink `cargo_src` -> ~/.cargo/registry/src/XXX/
    - run: cargo metadata | deno run -A get_cargo_src.js
    # copy source code
    - run: make fetch_code
    # apply patch
    - run: cd workdir && patch -p1 < ../patch_set/cross.patch
    - run: rm workdir/v8-0.75.0/rust-toolchain.toml

    - uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64
    # setup QEMU aarch64 for docker
    - run: docker run --rm --privileged aptman/qus -s -- -p aarch64 arm

    # download `librusty_v8.a` for `lib_v8`
    - uses: robinraju/release-downloader@v1
      with:
        repository: "denoland/rusty_v8"
        tag: "v0.75.0"
        fileName: "librusty_v8_release_aarch64-unknown-linux-gnu.a"
    - run: cp librusty_v8_release_aarch64-unknown-linux-gnu.a lib_v8/v0.75.0

    - uses: robinraju/release-downloader@v1
      with:
        repository: "denoland/rusty_v8"
        tag: "v0.75.0"
        fileName: "librusty_v8_release_x86_64-unknown-linux-gnu.a"
    - run: cp librusty_v8_release_x86_64-unknown-linux-gnu.a lib_v8/v0.75.0

    # setup custom rust toolchain for cargo-cross-build
    - uses: robinraju/release-downloader@v1
      with:
        repository: "fm-elpac/cargo-cross-build"
        tag: "cargo-1.73.0"
        fileName: "cargo-cross-build.tar.zst"
    - run: tar -xvf cargo-cross-build.tar.zst

    - run: rustup target add aarch64-unknown-linux-gnu
    - run: cp -r ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu ~/.rustup/toolchains/cross-build
    - run: cp cargo ~/.rustup/toolchains/cross-build/bin

    # build `deno`
    - run: WORKDIR=$(pwd)/workdir CARGO_DIR=~/.cargo make deno_gnu_aarch64

    # upload deno
    - run: cd workdir/deno-1.36.2/target/aarch64-unknown-linux-gnu/release && zstd -19 deno

    - uses: actions/upload-artifact@v3
      with:
        name: deno-1.36.2_aarch64-unknown-linux-gnu
        path: workdir/deno-1.36.2/target/aarch64-unknown-linux-gnu/release/deno.zst

# TODO
